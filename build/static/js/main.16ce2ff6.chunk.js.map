{"version":3,"sources":["logos/logo.png","firebaseSetup.ts","components/Login.tsx","components/SplashScreen.tsx","components/PostButton.tsx","logos/favicon.png","logos/HomeHeader.png","components/signedInUserEmail.tsx","components/ToolbarAndChips.tsx","logos/partyImage1.png","logos/campusImage1.png","logos/studyImage1.png","logos/studyImage2.png","logos/studyImage3.png","logos/campusImage2.png","logos/campusImage3.png","logos/partyImage2.png","logos/partyImage3.png","components/PlusOneButton.tsx","components/EventCards.tsx","components/EventCardContainer.tsx","components/HomeScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","useStyles","makeStyles","theme","root","flexGrow","button","alignContent","alignItems","justify","marginTop","spacing","marginBottom","borderRadius","padding","logo","height","width","menuButton","marginRight","toolbar","paddingTop","paddingBottom","backgroundColor","title","alignSelf","color","form","margin","appicon","marginPassword","textfield","backdrop","zIndex","drawer","Alert","props","elevation","variant","createTheme","palette","primary","main","light","dark","secondary","Login","classes","history","useHistory","React","useState","open","vertical","horizontal","state","setState","setOpen","setOpen1","submitDisabled","setSubmitDisabled","setEmail","handleClose","validity","emailRef","current","value","includes","signIn","handleToggle","buttons","Fragment","ThemeProvider","Button","size","className","disabled","onClick","useRef","actionCodeSettings","url","handleCodeInApp","a","sendSignInLinkToEmail","window","localStorage","setItem","console","error","isSignInWithEmailLink","location","href","email","getItem","prompt","redirectToHomepage","signInWithEmailLink","then","result","removeItem","catch","log","Grid","container","justifyContent","direction","AppBar","position","Toolbar","IconButton","push","Typography","component","align","style","item","alt","src","noValidate","autoComplete","xs","TextField","id","label","required","placeholder","inputRef","helperText","onChange","event","target","Snackbar","anchorOrigin","onClose","message","severity","Backdrop","CircularProgress","field","SplashScreen","onAuthStateChanged","user","popoverFab","formControl","minWidth","selectEmpty","dateAndTime","marginLeft","maxWidth","fabicon","top","right","bottom","left","locationField","eventBox","PostButton","loggedInUserEmail","setLoggedInUserEmail","useEffect","fetchIsLoggedIn","database","eventName","setEventName","eventLocation","setEventLocation","eventType","setEventType","Date","eventTime","setEventTime","handleDropDownChange","checkValidity","handleEventNameInput","handleKeyPress","handleEventLocationInput","handleEventTime","date","postButton","newPostKey","ref","child","key","postData","getTime","hostEmail","rsvpList","updates","update","PushData","reload","popupId","popupState","Fab","bindTrigger","Popover","bindPopover","transformOrigin","Box","p","FormControl","onKeyPress","InputLabel","Select","autoWidth","MenuItem","utils","DateFnsUtils","DateTimePicker","inputVariant","onError","disablePast","InputProps","endAdornment","InputAdornment","endIcon","Icon","userEmail","paddingLeft","gridContainerEmailIcon","typography","fontSize","SignedInUserEmail","currentUser","sx","bgcolor","borderColor","textTransform","secondToolobar","subtitle","extendedIcon","cardcomponent","cardTitle","cardpositions","username","textAlign","rightAlignText","accountIcon","minHeight","maxHeight","paddingBlock","bottomNav","iconText","logoButton","logoText","linkButton","chips","buttonChips","ToolbarAndChips","styled","Paper","body2","text","anchorEl","setAnchorEl","Boolean","handleClick","currentTarget","signOut","refreshPage","Avatar","m","pt","startIcon","undefined","Menu","MenuListProps","Link","underline","BugReportRounded","HelpOutlineRounded","icon","rsvpCount","check","UIDarray","eventID","uid","PushFirebase","PlusOneButton","open1","reason","handleDisable","length","autoHideDuration","leftAlignText","cardLooks","cardSubtitle","media","titleIcon","locationSubtitle","expand","transform","transition","transitions","create","duration","shortest","expandOpen","chooseImage","type","imageName","random","Math","round","studyImage1","studyImage2","studyImage3","partyImage1","partyImage2","partyImage3","campusImage1","campusImage2","campusImage3","chooseIcon","typeIcon","EventCards","Card","CardMedia","image","CardContent","wrap","name","time","AccountBox","CardActions","EventCardContainer","eventsList","setEventsList","timeConverter","timeFromFirebase","stringToDate","moment","format","fetchData","dateToday","setHours","getHours","timeTwoHoursAgoMS","startAfter","orderByChild","once","snapshot","fetchedEvents","forEach","val","Object","values","map","HomeScreen","mode","loggedInUserId","setLoggedInUserId","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAAe,MAA0B,iC,oDCYzCA,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAKJ,IAAMC,EAAOR,IAASQ,O,sECOvBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,aAAc,SACdC,WAAY,aACZC,QAAS,SACTC,UAAWP,EAAMQ,QAAQ,GACzBC,aAAcT,EAAMQ,QAAQ,GAC5BE,aAAc,GACdC,QAAS,gBAEXC,KAAM,CACJC,OAAQ,IACRC,MAAO,IACPV,aAAc,SACdE,QAAS,SACTD,WAAY,cAEdU,WAAY,CACVC,YAAahB,EAAMQ,QAAQ,IAE7BS,QAAS,CACPC,WAAYlB,EAAMQ,QAAQ,GAC1BW,cAAenB,EAAMQ,QAAQ,GAC7BY,gBAAiB,WAEnBC,MAAO,CACLnB,SAAU,EACVoB,UAAW,WACXC,MAAO,WAETC,KAAM,CACJ,QAAS,CACPC,OAAQzB,EAAMQ,QAAQ,KAG1BkB,QAAS,GACTC,eAAgB,CACdF,OAAQzB,EAAMQ,QAAQ,IAExBoB,UAAW,CACTd,MAAO,KAETe,SAAU,CACRC,OAAQ9B,EAAM8B,OAAOC,OAAS,EAC9BR,MAAO,YAQX,SAASS,EAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAKtD,IAAMjC,EAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKCE,EAAQ,WACnB,IAAMC,EAAU9C,IACV+C,EAAUC,cAEhB,EAA0BC,IAAMC,SAAgB,CAC9CC,MAAM,EACNC,SAAU,SACVC,WAAY,WAHd,mBAAOC,EAAP,KAAcC,EAAd,KAKQH,EAAyBE,EAAzBF,SAAUC,EAAeC,EAAfD,WAClB,EAAwBJ,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaK,EAAb,KACA,EAA0BP,IAAMC,UAAS,GAAzC,mBAAcO,GAAd,WACA,EAA4CR,IAAMC,UAAS,GAA3D,mBAAOQ,EAAP,KAAuBC,EAAvB,KACA,EAA2BV,IAAMC,SAAS,IAA1C,mBAAeU,GAAf,WAcMC,EAAc,WAClBN,EAAS,2BAAKD,GAAN,IAAaH,MAAM,KAC3BK,GAAQ,GACRC,GAAS,IAQX,SAASK,IACHC,EAASC,QAASC,MAAMC,SAAS,cACnCC,IACAC,KAjBFT,GAAkB,GA+BpB,IAAMU,EACJ,cAAC,IAAMC,SAAP,UACE,cAACC,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,cAACsE,EAAA,EAAD,CACEC,KAAK,QACLpC,QAAQ,WACRZ,MAAM,UACNiD,UAAW5B,EAAQzC,OACnBsE,SAAUjB,EACVkB,QAAS,WACPd,KAPJ,gCAgBAM,EAAe,WACnBZ,GAASL,IAaPY,EAAWc,iBAAyB,MACpCC,EAAqB,CACvBC,IAAK,2BACLC,iBAAiB,GAGbb,EAAM,uCAAG,sBAAAc,EAAA,+EAELlF,EAAKmF,sBACTnB,EAASC,QAASC,MAClBa,GAJS,OAMXK,OAAOC,aAAaC,QAAQ,iBAAkBtB,EAASC,QAASC,OANrD,+CAQXqB,QAAQC,MAAR,MARW,wDAAH,qDAaZ,IACE,GAAIxF,EAAKyF,sBAAsBL,OAAOM,SAASC,MAAO,CACpD,IAAIC,GAAQR,OAAOC,aAAaQ,QAAQ,kBACxC,IAAKD,GAGH,OAFAA,GAAQR,OAAOU,OAAO,8CACtBC,KACO,qEAEP/F,EACGgG,oBAAoBJ,GAAOR,OAAOM,SAASC,MAC3CM,MAAK,SAACC,GACLd,OAAOC,aAAac,WAAW,kBAC/BJ,QAEDK,OAAM,SAACZ,GACND,QAAQc,IAAIb,OAIpB,MAAOA,IACPD,QAAQC,MAAMA,IAShB,SAASO,KACPX,OAAOM,SAASC,KAAO,0BAKzB,OACE,qBAAKhB,UAAW5B,EAAQ3C,KAAxB,SAEE,eAACkG,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,UAAU,SAAlD,UAEE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAStE,UAAW,EAArC,SACE,cAACuE,EAAA,EAAD,CAASjC,UAAW5B,EAAQ3B,QAA5B,SACE,cAACyF,EAAA,EAAD,CACE,aAAW,OACXhC,QAAS,kBAAM7B,EAAQ8D,KAAK,kBAF9B,SAIE,cAAC,IAAD,UAMN,eAACC,EAAA,EAAD,CAAYC,UAAU,MAAMC,MAAM,SAASC,MAAO,CAAElG,OAAQ,SAA5D,UACE,cAACsF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,qBAAKxC,UAAU,eAAf,SACE,qBAAKyC,IAAI,OAAOzC,UAAW5B,EAAQhC,KAAMsG,IAAKtG,QAIlD,cAACuF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,sBAAMxC,UAAW5B,EAAQpB,KAAM2F,YAAU,EAACC,aAAa,KAAvD,SACE,cAACjB,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAAChD,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,cAACsH,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QAENnC,MAAO7B,EACPiE,UAAQ,EACRlG,MAAM,YACNY,QAAQ,WACRuF,YAAY,YACZC,SAAU9D,EACVW,UAAW5B,EAAQhB,UACnBgG,WAAW,0CAEXC,SAtJO,SAACC,GACxBpE,EAASoE,EAAMC,OAAOhE,OAgBU,KAA5BF,EAASC,QAASC,OACpBN,GAAkB,cA0Id,gCACGU,EACD,cAAC6D,EAAA,EAAD,CAEEC,aAAc,CAAE/E,SAAU,MAAOC,cACjCF,KAAMA,EACNiF,QAASvE,EACTwE,QAAQ,yBALV,SAQE,cAAC,EAAD,CAAOD,QAASvE,EAAayE,SAAS,UAAtC,6CAFKlF,EAAWC,GAMlB,cAACkF,EAAA,EAAD,CACE7D,UAAW5B,EAAQf,SACnBoB,KAAMA,EACNyB,QAASf,EAHX,SAKE,cAAC2E,EAAA,EAAD,CAAkB/G,MAAM,0B,QCtShCzB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZU,KAAM,CACJC,OAAQ,IACRC,MAAO,IACPV,aAAc,SACdE,QAAS,SACTD,WAAY,cAEdF,OAAQ,CACNC,aAAc,SACdC,WAAY,aACZC,QAAS,SACTC,UAAWP,EAAMQ,QAAQ,GACzBE,aAAc,GACdC,QAAS,gBAEXM,QAAS,CACPC,WAAYlB,EAAMQ,QAAQ,GAC1BW,cAAenB,EAAMQ,QAAQ,GAC7BY,gBAAiB,WAEnBC,MAAO,CACLnB,SAAU,EACVoB,UAAW,WACXC,MAAO,WAETgH,MAAO,CACL,QAAS,CACP9G,OAAQzB,EAAMQ,QAAQ,GACtBM,MAAO,aAKPd,EAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKC+F,EAAe,WAC1B,IAAM5F,EAAU9C,IACV+C,EAAUC,cAahB,OAVAzD,IAASQ,OAAO4I,oBAAmB,SAACC,GAC9BA,IAMJzD,OAAOM,SAASC,KAAO,8BAIvB,cAACnB,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,eAACmG,EAAA,EAAD,CAAMC,WAAS,EAAC9F,QAAQ,SAASD,WAAW,SAASiG,UAAU,SAA/D,UACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAStE,UAAW,EAArC,SACE,cAACuE,EAAA,EAAD,CAASjC,UAAW5B,EAAQ3B,YAE9B,cAACkF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,qBAAKxC,UAAU,gBAAf,SACE,qBAAKyC,IAAI,OAAOzC,UAAW5B,EAAQhC,KAAMsG,IAAKtG,QAIlD,cAACuF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC1C,EAAA,EAAD,CACEC,KAAK,QACLhD,MAAM,UACNY,QAAQ,YACRqC,UAAW5B,EAAQzC,OACnBuE,QAAS,kBAAM7B,EAAQ8D,KAAK,WAL9B,2B,2LCrDJ7G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZyI,WAAY,CACVhI,QAASX,EAAMQ,QAAQ,IAQzBoI,YAAa,CACXnH,OAAQzB,EAAMQ,QAAQ,GACtBqI,SAAU,KAEZC,YAAa,CACXvI,UAAWP,EAAMQ,QAAQ,IAE3BuI,YAAa,CACXC,WAAYhJ,EAAMQ,QAAQ,GAC1BqI,SAAU,IACVI,SAAU,KAEZC,QAAS,CACPzH,OAAQ,EACR0H,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACN9C,SAAU,QACV9F,aAAc,IAEhB6I,cAAe,CACbV,SAAU,IACVI,SAAU,KAEZO,SAAU,CACRX,SAAU,IACVI,SAAU,KAEZrH,UAAW,CACTd,MAAO,SAIE2I,GAAa,WACxB,IAAM7G,EAAU9C,KAGhB,EAAkDkD,mBAAS,IAA3D,mBAAO0G,EAAP,KAA0BC,EAA1B,KACAC,qBAAU,WACR,IAAMC,EAAe,uCAAG,sBAAA9E,EAAA,sDACtB1F,IAASQ,OAAO4I,oBAAmB,SAACC,GAEhCiB,EADEjB,EACmBA,EAAKjD,MAEL,OALH,2CAAH,qDASrBoE,MACC,CAACH,IAGJ,IAAII,EAAWzK,IAASyK,WACxB,EAAkC/G,IAAMC,SAAS,IAAjD,mBAAO+G,EAAP,KAAkBC,EAAlB,KACA,EAA0CjH,IAAMC,SAAS,IAAzD,mBAAOiH,EAAP,KAAsBC,EAAtB,KACA,EAAkCnH,IAAMC,SAAS,IAAjD,mBAAOmH,EAAP,KAAkBC,EAAlB,KACA,EAAkCrH,IAAMC,SAAsB,IAAIqH,MAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CxH,IAAMC,UAAS,GAA3D,mBAAOQ,EAAP,KAAuBC,EAAvB,KAoBA,IAAM+G,EAAuB,SAC3B1C,GAEAsC,EAAatC,EAAMC,OAAOhE,OAC1B0G,MAEIC,EAAuB,SAC3B5C,GAEAkC,EAAalC,EAAMC,OAAOhE,OAC1B0G,MAIIE,EAAiB,WACrBF,MAGIG,EAA2B,SAC/B9C,GAEAoC,EAAiBpC,EAAMC,OAAOhE,OAC9B0G,MAGII,GAAkB,SAACC,GACvBP,EAAaO,GACbL,MAEIzK,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKZ,SAASgI,KAOLhH,EALc,KAAdsG,GACkB,KAAlBE,GACc,KAAdE,GACa,MAAbG,GAYJ,SAASS,MA/ET,WACE,IAAMC,EAAalB,EAASmB,MAAMC,MAAM,UAAUvE,OAAOwE,IACrDC,EAAW,CACb7D,GAAIyD,EACJjB,UAAWA,EACXE,cAAeA,EACfE,UAAWA,EACXG,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWe,UACtBC,UAAW5B,EACX6B,SAAU,CAAC7B,IAGT8B,EAAe,GACnBA,EAAQ,UAAYR,GAAcI,EAElChG,QAAQc,IAAI7G,IAASyK,WAAWmB,MAAMQ,OAAOD,IAiE7CE,GAJAzG,OAAOM,SAASoG,SAQlB,OACE,cAAC,IAAD,CAAYxJ,QAAQ,UAAUyJ,QAAQ,qBAAtC,SACG,SAACC,GAAD,OACC,gCAEE,cAACxH,EAAA,EAAD,CAAerE,MAAOA,GAAtB,SACE,eAAC8L,EAAA,EAAD,yBACEvK,MAAM,UACNY,QAAQ,WAERqC,UAAW5B,EAAQsG,SACf6C,sBAAYF,IALlB,cAOE,cAAC,IAAD,IAPF,kBAYF,cAACG,EAAA,EAAD,2BACMC,sBAAYJ,IADlB,IAEE5D,aAAc,CACZ/E,SAAU,MACVC,WAAY,QAEd+I,gBAAiB,CACfhJ,SAAU,SACVC,WAAY,QARhB,SAYE,cAACkB,EAAA,EAAD,CAAerE,MAAOA,GAAtB,SACE,cAACmM,EAAA,EAAD,CAAKC,EAAG,EAAG5H,UAAW5B,EAAQ4G,SAA9B,SACE,cAAC5C,EAAA,EAAD,UACE,eAACT,EAAA,EAAD,CAAMC,WAAS,EAAC5F,QAAS,EAAzB,UACE,cAAC2F,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAACJ,EAAA,EAAD,CAAYzE,QAAQ,KAApB,4BAEF,cAACgE,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,cAACyF,GAAA,EAAD,UACE,cAAC/E,EAAA,EAAD,CACE/F,MAAM,YACNY,QAAQ,WACRqC,UAAW5B,EAAQhB,UACnB4F,MAAM,aACN8E,WAAY3B,EACZ9C,SAAU6C,EACVjD,UAAQ,UAMhB,cAACtB,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,CACE/F,MAAM,YACNkG,UAAQ,EACRtF,QAAQ,WACRqC,UAAW5B,EAAQhB,UACnB4F,MAAM,iBACN8E,WAAY3B,EACZ9C,SAAU+C,QAKhB,cAACzE,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,eAACyF,GAAA,EAAD,CACE9K,MAAM,YACNY,QAAQ,WACRqC,UAAW5B,EAAQgG,YACnBnB,UAAQ,EAJV,UAME,cAAC8E,EAAA,EAAD,iCACA,eAACC,EAAA,EAAD,CACEjL,MAAM,YACNwC,MAAOoG,EACPtC,SAAU2C,EACVhD,MAAM,aACNiF,WAAS,EALX,UAOE,cAACC,EAAA,EAAD,CAAUnL,MAAM,YAAYwC,MAAO,eAAnC,0BAGA,cAAC2I,EAAA,EAAD,CAAUnL,MAAM,YAAYwC,MAAO,aAAnC,wBAGA,cAAC2I,EAAA,EAAD,CAAUnL,MAAM,YAAYwC,MAAO,cAAnC,mCAQR,cAACoC,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,cAAC,KAAD,CAAyB+F,MAAOC,KAAhC,SACE,cAACC,GAAA,EAAD,CACEpF,UAAQ,EACRlG,MAAM,YACNiG,MAAM,aACNsF,aAAa,WACbtI,UAAW5B,EAAQmG,YACnBhF,MAAOuG,EACPzC,SAAUgD,GACVkC,QAAS3H,QAAQc,IACjB8G,aAAW,EACXC,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgB3G,SAAS,MAAzB,SACE,cAACE,EAAA,EAAD,UACE,cAAC,KAAD,iBAUhB,cAACP,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAAC/C,EAAA,EAAD,CACEI,QAASqG,GACTxJ,MAAM,YACNY,QAAQ,YACRiL,QAAS,cAACC,GAAA,EAAD,mBACT5I,SAAUjB,EALZ,uC,mDChUP,OAA0B,oCCA1B,OAA0B,uC,8BCiBnC1D,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCsN,UAAW,CACTnM,cAAe,EACfoM,YAAa,GAEfC,uBAAwB,CACtBtM,WAAY,GACZC,cAAe,GAEjBsM,WAAY,CACVC,SAAU,QAIDC,GAAoB,WAC/B,IAKMlI,EALA7C,EAAU9C,KAEV4I,EADOrJ,IAASQ,OACJ+N,YACdlF,GACFtD,QAAQc,IAAIwC,EAAKjD,OAEjBA,EAAQiD,EAAKjD,OAEbA,EAAQ,gBAGV,OACE,eAACU,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,cACVD,eAAe,WACfhG,WAAW,SACXmE,UAAW5B,EAAQ4K,uBALrB,UAOE,eAACrH,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,SACVD,eAAe,SACfhG,WAAW,SAJb,UAME,cAAC,KAAD,CAAQwN,GAAI,CAAEC,QAAS,UAAWhN,MAAO,GAAID,OAAQ,IAArD,SACE,cAAC+F,EAAA,EAAD,CAAYpC,UAAW5B,EAAQ6K,WAA/B,kBAPJ,UAWA,cAACtH,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,SACVD,eAAe,SACfhG,WAAW,SAJb,SAME,cAACuG,EAAA,EAAD,CAAYpC,UAAW5B,EAAQ0K,UAA/B,SAA2C7H,U,sEC5B7C3F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,aAAc,SACdC,WAAY,aACZC,QAAS,SACTI,aAAc,GACdqN,YAAa,UACbzM,UAAW,SACX0M,cAAe,QAGjBjN,WAAY,CACVC,YAAahB,EAAMQ,QAAQ,IAE7BS,QAAS,CACPC,WAAYlB,EAAMQ,QAAQ,IAC1BW,cAAenB,EAAMQ,QAAQ,IAC7BY,gBAAiB,WAEnB6M,eAAgB,CACd/M,WAAYlB,EAAMQ,QAAQ,IAC1BW,cAAenB,EAAMQ,QAAQ,IAC7BY,gBAAiB,WAEnBC,MAAO,CACLnB,SAAU,EACVqB,MAAO,WAET2M,SAAU,CACRhO,SAAU,EACVoB,UAAW,WACXC,MAAO,WAETK,UAAW,CACTd,MAAO,KAETqN,aAAc,CACZnN,YAAahB,EAAMQ,QAAQ,IAE7B4N,cAAe,CACbtN,MAAO,OAETuN,UAAW,CACTnO,SAAU,EACVqB,MAAO,UACPgM,YAAavN,EAAMQ,QAAQ,IAE7B8N,cAAe,CACb7N,aAAc,IAEhB8N,SAAU,CACRC,UAAW,QAEbC,eAAgB,CACdD,UAAW,SAEbE,YAAa,CACXC,UAAW,GACX9F,SAAU,GACVtH,MAAO,SAETG,QAAS,CACPb,OAAQ,KACRC,MAAO,KACP6N,UAAW,GACX9F,SAAU,GACV+F,UAAW,GACX3F,SAAU,GACV4F,aAAc,GAEhB3F,QAAS,CACPzH,OAAQ,EACR0H,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACN9C,SAAU,SAEZsI,UAAW,CACThO,MAAO,OACP0F,SAAU,QACV6C,OAAQ,GAEVV,WAAY,CACVhI,QAASX,EAAMQ,QAAQ,IAEzBoI,YAAa,CACXC,SAAU,IACVI,SAAU,KAEZF,YAAa,CACXC,WAAYhJ,EAAMQ,QAAQ,GAC1BqI,SAAU,IACVI,SAAU,KAEZM,cAAe,CACbV,SAAU,IACVI,SAAU,KAEZO,SAAU,CACRX,SAAU,IACVI,SAAU,KAEZ8F,SAAU,CACRxN,MAAO,UACPmM,SAAU,GACVH,YAAa,GAEfyB,WAAY,CACVJ,UAAW,GACX3F,SAAU,IAEZgG,SAAU,CACRL,UAAW,GACX3F,SAAU,GACV0F,UAAW,GACX9F,SAAU,GACV3H,WAAY,GAEdgO,WAAY,CACVlB,cAAe,QAEjBmB,MAAO,CACLlG,SAAU,SACV2F,UAAW,SACX/F,SAAU,QACV8F,UAAW,SAEbS,YAAa,CACXpB,cAAe,OACftN,aAAc,GACdG,OAAQ,SAWCwO,IAPAC,aAAOC,KAAPD,EAAc,gBAAGtP,EAAH,EAAGA,MAAH,mBAAC,eACvBA,EAAMyN,WAAW+B,OADK,IAEzB7O,QAASX,EAAMQ,QAAQ,GACvBgO,UAAW,SACXjN,MAAOvB,EAAMqC,QAAQoN,KAAK/M,eAGG,WAC7B,IAAME,EAAU9C,KAIhB,EAAgCiD,IAAMC,SAA6B,MAAnE,mBAAO0M,EAAP,KAAiBC,EAAjB,KACM1M,EAAO2M,QAAQF,GACfG,EAAc,SAAC/H,GACnB6H,EAAY7H,EAAMgI,gBAEdnM,EAAc,WAClBgM,EAAY,OAMd,SAASI,IACPlQ,EACGkQ,UACAjK,MAAK,WACJkK,OAED/J,OAAM,SAACZ,GACND,QAAQc,IAAI,mBAAoBb,MAKtC,SAAS2K,IACP/K,OAAOM,SAASoG,SAiBlB,IAAM3L,EAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKZ,OACE,cAAC8D,EAAA,EAAD,CACEC,SAAS,SACTtE,UAAW,EACX6E,MAAO,CAAEtF,OAAQ,EAAGX,MAAO,QAH7B,SAKE,cAAC2F,EAAA,EAAD,CAASjC,UAAW5B,EAAQ3B,QAA5B,SACE,eAACkF,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,MACVD,eAAe,gBACfhG,WAAW,SAJb,UAME,cAAC8F,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,eAACb,EAAA,EAAD,CACEC,WAAS,EACT5F,QAAS,EACT8F,UAAU,MACVD,eAAe,aACfhG,WAAW,SALb,UAOE,cAACqG,EAAA,EAAD,CAAYlC,UAAW5B,EAAQoM,WAAYtK,QAASsL,EAApD,SACE,cAACC,GAAA,EAAD,CAAQzL,UAAW5B,EAAQlB,QAASwF,IAAKtG,OAE3C,qBAAKsG,IAAK+H,GAAUzK,UAAW5B,EAAQqM,SAAUhI,IAAI,kBAGzD,cAACd,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC,IAAD,CAAY7E,QAAQ,UAAUyJ,QAAQ,qBAAtC,SACG,SAACC,GAAD,OACC,gCACE,cAACnF,EAAA,EAAD,yBACE,aAAW,0BACX,gBAAc,eACVqF,uBAAYF,IAHlB,aAKE,cAAC,KAAD,CACErH,UAAW5B,EAAQ8L,iBAIvB,cAAC1C,EAAA,EAAD,2BACMC,sBAAYJ,IADlB,IAEE5D,aAAc,CACZ/E,SAAU,SACVC,WAAY,QAEd+I,gBAAiB,CACfhJ,SAAU,MACVC,WAAY,SARhB,SAWE,cAACgJ,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACxF,EAAA,EAAD,UACE,eAACvC,EAAA,EAAD,CAAerE,MAAOA,EAAtB,UAEE,cAAC,GAAD,IACA,cAACmM,EAAA,EAAD,CAAK+D,EAAG,EAAGC,GAAI,IACf,cAAChK,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,SACVD,eAAe,SACfhG,WAAW,SAJb,SAME,cAACiE,EAAA,EAAD,CACEnC,QAAQ,WACRZ,MAAM,UACNmD,QAASqL,EACTvL,UAAW5B,EAAQzC,OACnBiQ,UAAW,cAAC,KAAD,IALb,sBAUF,cAACjE,EAAA,EAAD,CAAK+D,EAAG,EAAGC,GAAI,IACf,cAAChK,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,MACVD,eAAe,SACfhG,WAAW,SAJb,SAME,eAAC8F,EAAA,EAAD,CAAMa,MAAI,EAAV,UACE,cAAC1C,EAAA,EAAD,CACEiD,GAAG,eACH,gBAAc,aACd,gBAAc,OACd,gBAAetE,EAAO,YAASoN,EAC/B3L,QAASmL,EACTrL,UAAW5B,EAAQsM,WANrB,sBAWA,eAACoB,GAAA,EAAD,CACE/I,GAAG,aACHmI,SAAUA,EACVzM,KAAMA,EACNiF,QAASvE,EACT4M,cAAe,CACb,kBAAmB,gBANvB,UASE,cAACC,GAAA,EAAD,CACEhL,KAAK,gCACLjE,MAAM,UACNkP,UAAU,OAHZ,SAKE,eAAC/D,EAAA,EAAD,WACE,cAACP,EAAA,EAAD,CAAK+D,EAAG,GAAKC,GAAI,EAAjB,SACE,cAACO,GAAA,EAAD,CAAkBhD,SAAS,YAF/B,4BAOF,cAAC8C,GAAA,EAAD,CACEhL,KAAK,yBACLjE,MAAM,UACNkP,UAAU,OAHZ,SAKE,eAAC/D,EAAA,EAAD,WACE,cAACP,EAAA,EAAD,CAAK+D,EAAG,GAAKC,GAAI,EAAjB,SACE,cAACQ,GAAA,EAAD,CAAoBjD,SAAS,YAFjC,kBAQF,cAAC8C,GAAA,EAAD,CACEhL,KAAK,kCACLjE,MAAM,UACNkP,UAAU,OAHZ,SAKE,eAAC/D,EAAA,EAAD,WACE,cAACP,EAAA,EAAD,CAAK+D,EAAG,GAAKC,GAAI,EAAjB,SACE,cAAC,KAAD,CAAMS,KAAK,8BAFf,4D,6DC3XnB,OAA0B,wCCA1B,OAA0B,yCCA1B,OAA0B,wCCA1B,OAA0B,wCCA1B,OAA0B,wCCA1B,OAA0B,yCCA1B,OAA0B,yCCA1B,OAA0B,wCCA1B,OAA0B,wC,yECanC9Q,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CAMJC,SAAU,GAEZC,OAAQ,CACNC,aAAc,SACdC,WAAY,aACZC,QAAS,SACTC,UAAWP,EAAMQ,QAAQ,KACzBC,aAAcT,EAAMQ,QAAQ,GAC5BwI,WAAYhJ,EAAMQ,QAAQ,GAC1BQ,YAAahB,EAAMQ,SAAS,GAC5BE,aAAc,GACdC,QAAS,gBACTqN,cAAe,QAEjB6C,UAAW,CACT1P,cAAe,OAwBb2I,GAAWzK,IAASyK,WAM1B,SAAS9H,GAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAEtD,IAAI6O,IAAQ,EAEZ,SAASC,GAASC,EAAkBzF,GAClCnG,QAAQc,IAAI8K,GACZ,IACMtI,EADOrJ,IAASQ,OACJ+N,YAClBxI,QAAQc,WAAWqF,GAEf7C,IACG6C,EAASvH,SAAS0E,EAAKuI,KAK1BH,IAAQ,GAJRvF,EAAS5E,KAAK+B,EAAKuI,KAWzB,SAAsB1F,EAAgByF,GACpClH,GAASmB,IAAI,UAAY+F,EAAU,KAAKvF,OAAO,CAC7CF,SAAUA,IAZR2F,CAAa3F,EAAUyF,KAgBtB,IAAMG,GAAuC,SAAClP,GACnD,IAAMW,EAAU9C,KAChB,EAA4CiD,IAAMC,UAAS,GAA3D,mBAAOQ,EAAP,KAAuBC,EAAvB,KACA,EAAwBV,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaK,EAAb,KACA,EAA0BP,IAAMC,UAAS,GAAzC,mBAAOoO,EAAP,KAAc7N,EAAd,KAwBMI,EAAc,SAACmE,EAA8BuJ,GAClC,cAAXA,GAIJ/N,GAAQ,IAGJtD,EAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKZ,SAAS6O,IACP7N,GAAkB,GAGpB,SAASG,IACPmN,GAAS9O,EAAM+O,QAAS/O,EAAMsJ,UAC9BnG,QAAQc,IAAI4K,KACE,IAAVA,IAnDJxN,GAAQ,GAqDNgO,IACArP,EAAMsJ,SAASgG,OAAStP,EAAMsJ,SAASgG,OAAS,IAlDlDhO,GAAS,GAqDP+N,KAIJ,IAAMnN,EACJ,cAAC,IAAMC,SAAP,UACE,cAACC,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,cAACsE,EAAA,EAAD,CACEG,SAAUjB,EACVgB,UAAW5B,EAAQzC,OACnBoE,KAAK,QACLhD,MAAM,UACNmD,QAAS,WACPd,KANJ,yCAeN,OACE,8BACE,cAACS,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,cAAC4G,EAAA,EAAD,CAAYC,UAAU,MAAMC,MAAM,SAAlC,SACE,gCACG3C,EACD,cAAC6D,EAAA,EAAD,CACEwJ,iBAAkB,IAElBvO,KAAMA,EACNiF,QAASvE,EAJX,SAQE,cAAC,GAAD,CAAOuE,QAASvE,EAAayE,SAAS,UAAtC,gDAKF,cAACJ,EAAA,EAAD,CACEwJ,iBAAkB,IAElBvO,KAAMmO,EACNlJ,QAASvE,EAJX,SAQE,cAAC,GAAD,CAAOuE,QAASvE,EAAayE,SAAS,QAAtC,+CCzLRtI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZkO,cAAe,CACbtN,MAAO,OAETyN,SAAU,CACRC,UAAW,QAEbC,eAAgB,CACdD,UAAW,QACXnI,eAAgB,UAElBoL,cAAe,CACbjD,UAAW,OACXnI,eAAgB,SAChBkH,YAAa,IAEfmE,UAAW,CACThR,aAAc,IAEhB2N,UAAW,CAETd,YAAa,IAEfoE,aAAc,CAEZpE,YAAa,GAEfqE,MAAO,CACL/Q,OAAQ,KAEVgR,UAAW,CACT3Q,WAAY,GAEd4Q,iBAAkB,CAChBvE,YAAa,IAEfwE,OAAQ,CACNC,UAAW,eACXhJ,WAAY,OACZiJ,WAAYjS,EAAMkS,YAAYC,OAAO,YAAa,CAChDC,SAAUpS,EAAMkS,YAAYE,SAASC,YAGzCC,WAAY,CACVN,UAAW,kBAEbnB,UAAW,CACT1P,cAAe,OAIbnB,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAsBZ,SAAS8P,GAAYC,GACnB,IAAIC,EAAY,GACZC,EAASC,KAAKC,MATN,EAES,EAAAD,KAAKD,UAoC1B,MA5Ba,eAATF,IAEAC,EADa,IAAXC,EACUG,GACQ,IAAXH,EACGI,GAEAC,IAGH,gBAATP,IAEAC,EADa,IAAXC,EACUM,GACQ,IAAXN,EACGO,GAEAC,IAGH,iBAATV,IAEAC,EADa,IAAXC,EACUS,GACQ,IAAXT,EACGU,GAEAC,IAITZ,EAGT,SAASa,GAAWd,GAClB,IAAIe,EAAgB,GAUpB,MATa,eAATf,IACFe,EAAW,cAAC,KAAD,KAEA,gBAATf,IACFe,EAAW,cAAC,KAAD,KAEA,iBAATf,IACFe,EAAW,cAAC,KAAD,KAENA,EAGF,IAAMC,GAAqC,SAACvR,GACjD,IAAMW,EAAU9C,KAEhB,OAEE,cADA,CACA,OAAK0E,UAAW5B,EAAQwL,cAAxB,UAEE,eAACqF,GAAA,EAAD,CAAMtR,QAAQ,WAAWqC,UAAW5B,EAAQ8O,UAA5C,UAME,cAAC,IAAD,CAAkB1R,MAAOA,GAAzB,SACE,cAAC0T,GAAA,EAAD,CACElP,UAAW5B,EAAQgP,MACnB+B,MAAOpB,GAAYtQ,EAAMuQ,MACzBnR,MAAM,WAIV,eAACuS,GAAA,EAAD,WACE,eAACzN,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,cACVD,eAAe,WACfhG,WAAW,SACXwT,KAAK,SALP,UAOE,cAAC1N,EAAA,EAAD,CAAMa,MAAI,EAACxC,UAAS,UAAK5B,EAAQyL,UAAb,IAA0B,WAA9C,SACGpM,EAAM6R,OAET,cAAC3N,EAAA,EAAD,CAAMa,MAAI,EAACxC,UAAS,UAAK5B,EAAQiP,UAAb,IAA0B,cAA9C,SACGyB,GAAWrR,EAAMuQ,WAItB,eAACrM,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,cACVD,eAAe,WACfhG,WAAW,SACXwT,KAAK,SALP,UAOE,cAAC1N,EAAA,EAAD,CACEa,MAAI,EACJxC,UAAS,UAAK5B,EAAQkP,iBAAb,IAAiC,cAF5C,SAIG7P,EAAMsD,WAET,cAAC,KAAD,OAEF,cAACY,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,cACVD,eAAe,WACfhG,WAAW,SACXwT,KAAK,SALP,SAOE,cAAC1N,EAAA,EAAD,CAAMa,MAAI,EAACxC,UAAS,UAAK5B,EAAQ+O,aAAb,IAA6B,cAAjD,SACG1P,EAAM8R,SAvCb,OA2CE,eAAC5N,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,cACVD,eAAe,WACfhG,WAAW,SACXwT,KAAK,SALP,UAOE,cAAC1N,EAAA,EAAD,CAAMa,MAAI,EAACxC,UAAS,UAAK5B,EAAQ6O,cAAb,IAA8B,cAAlD,SACGxP,EAAMwD,QAET,cAACuO,GAAA,EAAD,UAIJ,eAACC,GAAA,EAAD,WACE,cAAC,GAAD,CACEjD,QAAS/O,EAAM+O,QACfzF,SAAUtJ,EAAMsJ,WAHpB,YAME,eAACpF,EAAA,EAAD,CAAMa,MAAI,EAACxC,UAAW5B,EAAQiO,UAA9B,UACG5O,EAAMsJ,SAASgG,OADlB,sBA/EN,W,qBCzJS2C,GAAqB,WAChC,MAAoClR,mBAAS,IAA7C,mBAAOmR,EAAP,KAAmBC,EAAnB,KAuCA,SAASC,EAAcC,GACrB,IACIC,EAAe,IAAIlK,KADNiK,GAEjB,OAAOE,KAAOD,GAAcE,OAAO,mBAGrC,OA5CA7K,qBAAU,WACR,IAAM8K,EAAS,uCAAG,8BAAA3P,EAAA,uDAQZ4P,EAAY,IAAItK,MAEVuK,SAASD,EAAUE,WAAa,GAEtCC,EAAoBH,EAAUtJ,UAElCjG,QAAQc,IAAIyO,GAEItV,IACbyK,WACAmB,IAAI,UACJ8J,WAAWD,GACXE,aAAa,aAENC,KAAK,SAASnP,MAAK,SAACoP,GAG5B,IAAIC,EAAgB,GACpBD,EAASE,SAAQ,SAAUlK,GACzBiK,EAAcxO,KAAKuE,EAAMmK,UAE3BjB,EAAce,MA7BA,2CAAH,qDAgCfT,MACC,IAEHtP,QAAQc,IAAI,aAAciO,GASxB,mCACGmB,OAAOC,OAAOpB,GAAYqB,KAAI,SAAC1N,GAAD,OAC7B,cAAC,GAAD,CACEgM,KAAMhM,EAAMiC,UACZgK,KAAMM,EAAcvM,EAAMwC,WAC1B/E,SAAUuC,EAAMmC,cAChBuI,KAAM1K,EAAMqC,UACZ1E,MAAOqC,EAAMwD,UACbC,SAAUzD,EAAMyD,SAChByF,QAASlJ,EAAMP,WCpDnBzH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,OAIRF,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAQCgT,IAHKrT,YAAY,CAAEC,QAAS,CAAEqT,KAAM,UAGvB,WACxB,MAA4C1S,mBAAS,IAArD,mBAAO2S,EAAP,KAAuBC,EAAvB,KACAhM,qBAAU,WACR,IAAMC,EAAe,uCAAG,sBAAA9E,EAAA,sDACtB1F,IAASQ,OAAO4I,oBAAmB,SAACC,GAC9BA,GACFkN,EAAkBlN,EAAKuI,KACvB7L,QAAQc,IAAIwC,EAAKuI,MAEjB2E,EAAkB,OANA,2CAAH,qDAUrB/L,MACC,CAAC8L,IACJ,IAAM/S,EAAU9C,KACV+C,EAAUC,cAEhB,OACE,sBAAK0B,UAAW5B,EAAQ3C,KAAxB,UAEsB,KAAnB0V,GAEC,cAACxP,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASD,eAAe,SAAlD,SACE,eAACO,EAAA,EAAD,CACEC,UAAU,MACVC,MAAM,SAENC,MAAO,CAAElG,OAAQ,SAJnB,UAOE,cAAC,GAAD,IAPF,OASE,eAACsF,EAAA,EAAD,CACEC,WAAS,EACT5F,QAAS,EACT8F,UAAU,SACVjG,WAAW,SACXC,QAAQ,SALV,UAOE,cAACsG,EAAA,EAAD,CAAYzE,QAAQ,KAApB,qDAPF,OAWE,cAACyE,EAAA,EAAD,CAAYzE,QAAQ,KAApB,qEAXF,OAeE,cAAC,IAAD,CAAenC,MAAOA,GAAtB,SACE,cAACmG,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC1C,EAAA,EAAD,CACEC,KAAK,QACLpC,QAAQ,WACRZ,MAAM,UACNiD,UAAU,aACVuC,MAAO,CAAErG,aAAc,GAAIC,QAAS,gBACpC+D,QAAS,kBAAM7B,EAAQ8D,KAAK,WAN9B,+BAkBQ,KAAnBgP,GACC,cAACxP,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASD,eAAe,SAAlD,SACE,eAACO,EAAA,EAAD,CACEC,UAAU,MACVC,MAAM,SACNC,MAAO,CAAElG,OAAQ,SAHnB,UAKE,cAAC,GAAD,IALF,OAOE,cAACsF,EAAA,EAAD,CACEC,WAAS,EACT5F,QAAS,EACT8F,UAAU,SACVjG,WAAW,SACXC,QAAQ,SALV,SAOE,cAAC,GAAD,MAEF,cAAC6F,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC,GAAD,gBCtHRhH,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAQG,SAASoT,KACtB,OACE,cAACxR,EAAA,EAAD,CAAerE,MAAOA,GAAtB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO8V,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,IAAiB,OAEnB,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,UACE,cAAC,EAAD,IAAU,OAEZ,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,UACE,cAAC,GAAD,IAAe,OAEjB,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,aCrCZ,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpQ,MAAK,YAAkD,IAA/CqQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,GAAD,MAEFc,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.16ce2ff6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.53ca20cd.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBQRGfJynPI0BznjfK0Gg2fcn0v7IOzke4\",\n    authDomain: \"kaglet-91224.firebaseapp.com\",\n    projectId: \"kaglet-91224\",\n    storageBucket: \"kaglet-91224.appspot.com\",\n    messagingSenderId: \"407470091369\",\n    appId: \"1:407470091369:web:b59563c510fc47655086f8\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\n","import { Grid, IconButton, Toolbar } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logos/logo.png\";\nimport { Typography, AppBar } from \"@material-ui/core\";\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRef } from \"react\";\nimport { auth } from \"../firebaseSetup\";\nimport React from \"react\";\nimport Snackbar, { SnackbarOrigin } from \"@material-ui/core/Snackbar\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  makeStyles,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\n\n//defining the styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n  },\n  logo: {\n    height: 300,\n    width: 300,\n    alignContent: \"center\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    backgroundColor: \"#ffffff\",\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: \"flex-end\",\n    color: \"#000000\",\n  },\n  form: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n    },\n  },\n  appicon: {},\n  marginPassword: {\n    margin: theme.spacing(1),\n  },\n  textfield: {\n    width: 300,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport interface State extends SnackbarOrigin {\n  open: boolean;\n}\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//the actual function coming out of this class hence the export.\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\nexport const Login = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [state, setState] = React.useState<State>({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"center\",\n  });\n  const { vertical, horizontal } = state;\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n  const [email1, setEmail] = React.useState(\"\");\n\n  const handleClick = (newState: SnackbarOrigin) => () => {\n    setState({ open: true, ...newState });\n  };\n\n  const handleClickOpen = () => {\n    setOpen1(true);\n  };\n\n  const handleError = () => {\n    setSubmitDisabled(true);\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n    setOpen(false);\n    setOpen1(false);\n  };\n\n  const handleEmailInput = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setEmail(event.target.value as string);\n    checkValidity();\n  };\n\n  function validity() {\n    if (emailRef.current!.value.includes(\"@kzoo.edu\")) {\n      signIn();\n      handleToggle();\n      handleClick({ vertical: \"top\", horizontal: \"center\" });\n    } else {\n      //handleClickOpen();\n      handleError();\n    }\n  }\n\n  function checkValidity() {\n    if (emailRef.current!.value !== \"\") {\n      setSubmitDisabled(false);\n    }\n  }\n\n  const buttons = (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Button\n          size=\"large\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n          disabled={submitDisabled}\n          onClick={() => {\n            validity();\n          }}\n        >\n          Get Login Link\n        </Button>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  //enter key check\n  const handleKeyPress = (event: any) => {\n    event.preventDefault();\n    if (event.which === 13 || event.key === \"Enter\" || event.key === \"Go\") {\n      validity();\n    }\n  };\n\n  // firebaseItems\n  //getting the email data from the text field\n  let emailRef = useRef<HTMLInputElement>(null);\n  var actionCodeSettings = {\n    url: \"https://kaglet.app/login\",\n    handleCodeInApp: true,\n  };\n\n  const signIn = async () => {\n    try {\n      await auth.sendSignInLinkToEmail(\n        emailRef.current!.value,\n        actionCodeSettings\n      );\n      window.localStorage.setItem(\"emailForSignIn\", emailRef.current!.value);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //firebase login items\n  try {\n    if (auth.isSignInWithEmailLink(window.location.href)) {\n      var email = window.localStorage.getItem(\"emailForSignIn\");\n      if (!email) {\n        email = window.prompt(\"Please provide your email for confirmation\");\n        redirectToHomepage();\n        return <div>Try again in a non-private window.</div>;\n      } else {\n        auth\n          .signInWithEmailLink(email, window.location.href)\n          .then((result) => {\n            window.localStorage.removeItem(\"emailForSignIn\");\n            redirectToHomepage();\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  // //this will be called later.\n  // const signOut = async () => {\n  //   await auth.signOut();\n  // };\n\n  //redirects if the user is already logged in\n  function redirectToHomepage() {\n    window.location.href = \"https://kaglet.app/home\";\n  }\n\n  //firebase-ends\n\n  return (\n    <div className={classes.root}>\n      {/* grid containing all elements in the screen */}\n      <Grid container justifyContent=\"center\" direction=\"column\">\n        {/* app bar which has the back button */}\n        <AppBar position=\"sticky\" elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              aria-label=\"back\"\n              onClick={() => history.push(\"/splashscreen\")}\n            >\n              <ArrowBackRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        {/* this holds the components after the app  */}\n        <Typography component=\"div\" align=\"center\" style={{ height: \"100vh\" }}>\n          <Grid item>\n            <div className=\"col-centered\">\n              <img alt=\"Logo\" className={classes.logo} src={logo} />\n            </div>\n          </Grid>\n\n          <Grid item>\n            <form className={classes.form} noValidate autoComplete=\"on\">\n              <Grid item xs={12}>\n                <ThemeProvider theme={theme}>\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"Email\"\n                    //helperText=\"Incorrect entry.\"\n                    error={submitDisabled}\n                    required\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    placeholder=\"@kzoo.edu\"\n                    inputRef={emailRef}\n                    className={classes.textfield}\n                    helperText=\"Please use your @kzoo.edu school email.\"\n                    // onKeyPress={handleKeyPress}\n                    onChange={handleEmailInput}\n                  />\n                </ThemeProvider>\n              </Grid>\n            </form>\n          </Grid>\n          <div>\n            {buttons}\n            <Snackbar\n              //autoHideDuration={100000000}\n              anchorOrigin={{ vertical: \"top\", horizontal }}\n              open={open}\n              onClose={handleClose}\n              message=\"Link successfully sent\"\n              key={vertical + horizontal}\n            >\n              <Alert onClose={handleClose} severity=\"success\">\n                Check your email! 🤪\n              </Alert>\n            </Snackbar>\n            <Backdrop\n              className={classes.backdrop}\n              open={open}\n              onClick={handleClose}\n            >\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </div>\n        </Typography>\n      </Grid>\n    </div>\n  );\n};\n","import { AppBar, Grid, Toolbar } from \"@material-ui/core\";\nimport {\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logos/logo.png\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  logo: {\n    height: 300,\n    width: 300,\n    alignContent: \"center\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(2),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    backgroundColor: \"#ffffff\",\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: \"flex-end\",\n    color: \"#000000\",\n  },\n  field: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: \"25ch\",\n    },\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\nexport const SplashScreen = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  //if the user is logged in, it redirects to the home page\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      redirectToHomepage();\n    }\n  });\n\n  function redirectToHomepage() {\n    window.location.href = \"https://kaglet.app/home\";\n  }\n  // only dealing with sending to other screens\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n        <AppBar position=\"static\" elevation={0}>\n          <Toolbar className={classes.toolbar}></Toolbar>\n        </AppBar>\n        <Grid item>\n          <div className=\"col-centeredd\">\n            <img alt=\"Logo\" className={classes.logo} src={logo} />\n          </div>\n        </Grid>\n\n        <Grid item>\n          <Button\n            size=\"large\"\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.button}\n            onClick={() => history.push(\"/login\")}\n          >\n            Login\n          </Button>\n        </Grid>\n\n        {/* <Grid item>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => history.push(\"/home\")}\n          >\n            Home Screen Test\n          </Button>\n        </Grid> */}\n      </Grid>\n    </ThemeProvider>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  Typography,\n  InputLabel,\n  MenuItem,\n  Select,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { TextField } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport firebase from \"firebase\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport EventRoundedIcon from \"@material-ui/icons/EventRounded\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\n\n// import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport Icon from \"@material-ui/core/Icon\";\n//import { useDebugValue } from \"react\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nexport interface EventDetails {\n  name: string;\n  type?: string;\n  location?: string;\n  time?: string;\n  email?: string;\n  submitDisabled?: boolean;\n  textValid?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  popoverFab: {\n    padding: theme.spacing(2),\n  },\n  /*\n  formControl: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 270,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  dateAndTime: {\n    marginLeft: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  fabicon: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n    borderRadius: 20,\n  },\n  locationField: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  eventBox: {\n    minWidth: 200,\n    maxWidth: 500,\n  },\n  textfield: {\n    width: 200,\n  },\n}));\n\nexport const PostButton = () => {\n  const classes = useStyles();\n\n  // Get user's email address\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\");\n  useEffect(() => {\n    const fetchIsLoggedIn = async () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          setLoggedInUserEmail(user.email!);\n        } else {\n          setLoggedInUserEmail(\"\");\n        }\n      });\n    };\n    fetchIsLoggedIn();\n  }, [loggedInUserEmail]);\n\n  //pushing into Firebase\n  var database = firebase.database();\n  const [eventName, setEventName] = React.useState(\"\");\n  const [eventLocation, setEventLocation] = React.useState(\"\");\n  const [eventType, setEventType] = React.useState(\"\");\n  const [eventTime, setEventTime] = React.useState<Date | null>(new Date());\n  const [submitDisabled, setSubmitDisabled] = React.useState(true);\n\n  function PushData() {\n    const newPostKey = database.ref().child(\"events\").push().key;\n    var postData = {\n      id: newPostKey,\n      eventName: eventName,\n      eventLocation: eventLocation,\n      eventType: eventType,\n      eventTime: eventTime?.getTime(),\n      hostEmail: loggedInUserEmail,\n      rsvpList: [loggedInUserEmail],\n    };\n\n    var updates: any = {};\n    updates[\"events/\" + newPostKey] = postData;\n\n    console.log(firebase.database().ref().update(updates));\n  }\n\n  const handleDropDownChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventType(event.target.value as string);\n    checkValidity();\n  };\n  const handleEventNameInput = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventName(event.target.value as string);\n    checkValidity();\n  };\n\n  //delete key check\n  const handleKeyPress = () => {\n    checkValidity();\n  };\n\n  const handleEventLocationInput = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventLocation(event.target.value as string);\n    checkValidity();\n  };\n\n  const handleEventTime = (date: Date | null) => {\n    setEventTime(date);\n    checkValidity();\n  };\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#EE6C4D\",\n        light: \"#ff9b79\",\n        dark: \"#b53a22\",\n      },\n      secondary: {\n        main: \"#4C5760\",\n        light: \"#78848d\",\n        dark: \"#242e36\",\n      },\n    },\n  });\n\n  function checkValidity() {\n    if (\n      eventName !== \"\" &&\n      eventLocation !== \"\" &&\n      eventType !== \"\" &&\n      eventTime != null\n    ) {\n      setSubmitDisabled(false);\n    } else {\n      setSubmitDisabled(true);\n    }\n  }\n\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  function postButton() {\n    PushData();\n    refreshPage();\n  }\n\n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n      {(popupState) => (\n        <div>\n          {/* Floating action button in the bottom right corner, the styles are defined in useStyles */}\n          <ThemeProvider theme={theme}>\n            <Fab\n              color=\"primary\"\n              variant=\"extended\"\n              //variant=\"outlined\"\n              className={classes.fabicon}\n              {...bindTrigger(popupState)}\n            >\n              <AddIcon />\n              New Event\n            </Fab>\n          </ThemeProvider>\n          {/* Opens popover, the rest inside is self explanatory */}\n          <Popover\n            {...bindPopover(popupState)}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n            transformOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\",\n            }}\n          >\n            {/* Box that shows up when button is clicked, all following tags are self explanatory*/}\n            <ThemeProvider theme={theme}>\n              <Box p={2} className={classes.eventBox}>\n                <Typography>\n                  <Grid container spacing={2}>\n                    <Grid item>\n                      <Typography variant=\"h6\">Create Event</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography>\n                        <FormControl>\n                          <TextField\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            className={classes.textfield}\n                            label=\"Event Name\"\n                            onKeyPress={handleKeyPress}\n                            onChange={handleEventNameInput}\n                            required\n                          ></TextField>\n                        </FormControl>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <TextField\n                          color=\"secondary\"\n                          required\n                          variant=\"outlined\"\n                          className={classes.textfield}\n                          label=\"Event Location\"\n                          onKeyPress={handleKeyPress}\n                          onChange={handleEventLocationInput}\n                        ></TextField>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <FormControl\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                          required\n                        >\n                          <InputLabel>Select Event Types</InputLabel>\n                          <Select\n                            color=\"secondary\"\n                            value={eventType}\n                            onChange={handleDropDownChange}\n                            label=\"Event Type\"\n                            autoWidth\n                          >\n                            <MenuItem color=\"secondary\" value={\"Campus Event\"}>\n                              Campus Event\n                            </MenuItem>\n                            <MenuItem color=\"secondary\" value={\"Study Sesh\"}>\n                              Study Sesh\n                            </MenuItem>\n                            <MenuItem color=\"secondary\" value={\"House Party\"}>\n                              House Party\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                          <DateTimePicker\n                            required\n                            color=\"secondary\"\n                            label=\"Event Time\"\n                            inputVariant=\"outlined\"\n                            className={classes.dateAndTime}\n                            value={eventTime}\n                            onChange={handleEventTime}\n                            onError={console.log}\n                            disablePast\n                            InputProps={{\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                  <IconButton>\n                                    <EventRoundedIcon />\n                                  </IconButton>\n                                </InputAdornment>\n                              ),\n                            }}\n                          />\n                        </MuiPickersUtilsProvider>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Button\n                        onClick={postButton}\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        endIcon={<Icon>send</Icon>}\n                        disabled={submitDisabled}\n                      >\n                        Post\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Typography>\n              </Box>\n            </ThemeProvider>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/favicon.0d794a5d.png\";","export default __webpack_public_path__ + \"static/media/HomeHeader.7353d340.png\";","import { Grid, Typography } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\n\n// function GetUserEmail() {\n//   const auth = firebase.auth();\n//   const user = auth.currentUser;\n//   if (user) {\n//     console.log(user.email);\n//     return user.email;\n//   } else {\n//     console.log(\"not logged in\");\n//     return \"Not Logged In\";\n//   }\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  userEmail: {\n    paddingBottom: 5,\n    paddingLeft: 5,\n  },\n  gridContainerEmailIcon: {\n    paddingTop: 10,\n    paddingBottom: 5,\n  },\n  typography: {\n    fontSize: 35,\n  },\n}));\n\nexport const SignedInUserEmail = () => {\n  const classes = useStyles();\n  const auth = firebase.auth();\n  const user = auth.currentUser;\n  if (user) {\n    console.log(user.email);\n    var email: any;\n    email = user.email;\n  } else {\n    email = \"Not Logged In\";\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"row-reverse\"\n      justifyContent=\"flex-end\"\n      alignItems=\"center\"\n      className={classes.gridContainerEmailIcon}\n    >\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar sx={{ bgcolor: \"#EE6C4D\", width: 80, height: 80 }}>\n          <Typography className={classes.typography}>KC</Typography>\n        </Avatar>\n        &nbsp;\n      </Grid>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Typography className={classes.userEmail}>{email}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import {\n  Typography,\n  AppBar,\n  Box,\n  Popover,\n  Button,\n  Avatar,\n  MenuItem,\n  Paper,\n} from \"@material-ui/core\";\nimport { Icon } from \"@iconify/react\";\n\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Toolbar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport logo from \"../logos/favicon.png\";\nimport logoText from \"../logos/HomeHeader.png\";\nimport PopupState, { bindPopover } from \"material-ui-popup-state\";\nimport { bindTrigger } from \"material-ui-popup-state/hooks\";\nimport React from \"react\";\nimport { auth } from \"../firebaseSetup\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { SignedInUserEmail } from \"./signedInUserEmail\";\nimport MeetingRoomRoundedIcon from \"@mui/icons-material/MeetingRoomRounded\";\nimport { Link, Menu, styled } from \"@mui/material\";\nimport {\n  BugReportRounded,\n  HelpOutlineRounded,\n  LocalBar,\n} from \"@material-ui/icons\";\nimport Stack from \"@mui/material/Stack\";\n\nimport LocalBarIcon from \"@material-ui/icons/LocalBar\";\nimport SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\nimport BackpackRoundedIcon from \"@material-ui/icons/BackpackRounded\";\nimport Slide from \"@mui/material/Slide\";\n// import { Chip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    borderRadius: 20,\n    borderColor: \"#becddc\",\n    alignSelf: \"center\",\n    textTransform: \"none\",\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    backgroundColor: \"#ffffff\",\n  },\n  secondToolobar: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    backgroundColor: \"#ffffff\",\n  },\n  title: {\n    flexGrow: 1,\n    color: \"#000000\",\n  },\n  subtitle: {\n    flexGrow: 1,\n    alignSelf: \"flex-end\",\n    color: \"#000000\",\n  },\n  textfield: {\n    width: 200,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(2),\n  },\n  cardcomponent: {\n    width: \"90%\",\n  },\n  cardTitle: {\n    flexGrow: 1,\n    color: \"#000000\",\n    paddingLeft: theme.spacing(7),\n  },\n  cardpositions: {\n    marginBottom: 12,\n  },\n  username: {\n    textAlign: \"left\",\n  },\n  rightAlignText: {\n    textAlign: \"right\",\n  },\n  accountIcon: {\n    minHeight: 30,\n    minWidth: 30,\n    color: \"black\",\n  },\n  appicon: {\n    height: \"3%\",\n    width: \"3%\",\n    minHeight: 28,\n    minWidth: 28,\n    maxHeight: 42,\n    maxWidth: 42,\n    paddingBlock: 2,\n  },\n  fabicon: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  },\n  bottomNav: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n  popoverFab: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  dateAndTime: {\n    marginLeft: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  locationField: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  eventBox: {\n    minWidth: 200,\n    maxWidth: 500,\n  },\n  iconText: {\n    color: \"#543B31\",\n    fontSize: 25,\n    paddingLeft: 1,\n  },\n  logoButton: {\n    maxHeight: 45,\n    maxWidth: 45,\n  },\n  logoText: {\n    maxHeight: 40,\n    maxWidth: 90,\n    minHeight: 30,\n    minWidth: 66,\n    paddingTop: 5,\n  },\n  linkButton: {\n    textTransform: \"none\",\n  },\n  chips: {\n    maxWidth: \"125rem\",\n    maxHeight: \"400rem\",\n    minWidth: \"10rem\",\n    minHeight: \"32rem\",\n  },\n  buttonChips: {\n    textTransform: \"none\",\n    borderRadius: 60,\n    height: 160,\n  },\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport const ToolbarAndChips = () => {\n  const classes = useStyles();\n  //this will be called later.\n\n  //code to deal with opening links \"dropdown\"\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  //end dropdown code\n\n  //signout function\n  function signOut() {\n    auth\n      .signOut()\n      .then(() => {\n        refreshPage();\n      })\n      .catch((error) => {\n        console.log(\"error logging in\", error);\n      });\n  }\n\n  //refreshes page after logging out so user cannot access stuff after logging out\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  //to be implented later: chips with event types\n\n  // const [flag1, setFlag1] = React.useState(true);\n  // const [flag2, setFlag2] = React.useState(true);\n  // const [flag3, setFlag3] = React.useState(true);\n  // const handleClickCampus = () => {\n  //   setFlag1(!flag1);\n  // };\n  // const handleClickStudy = () => {\n  //   setFlag2(!flag2);\n  // };\n  // const handleClickParty = () => {\n  //   setFlag3(!flag3);\n  // };\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#EE6C4D\",\n        light: \"#ff9b79\",\n        dark: \"#b53a22\",\n      },\n      secondary: {\n        main: \"#4C5760\",\n        light: \"#78848d\",\n        dark: \"#242e36\",\n      },\n    },\n  });\n\n  return (\n    <AppBar\n      position=\"static\"\n      elevation={0}\n      style={{ margin: 0, width: \"100%\" }}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Grid\n              container\n              spacing={0}\n              direction=\"row\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <IconButton className={classes.logoButton} onClick={refreshPage}>\n                <Avatar className={classes.appicon} src={logo} />\n              </IconButton>\n              <img src={logoText} className={classes.logoText} alt=\"logoText\" />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n              {(popupState) => (\n                <div>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    {...bindTrigger(popupState)}\n                  >\n                    <AccountCircle\n                      className={classes.accountIcon}\n                    ></AccountCircle>\n                  </IconButton>\n\n                  <Popover\n                    {...bindPopover(popupState)}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <Box p={2}>\n                      <Typography>\n                        <ThemeProvider theme={theme}>\n                          {/* Here comes the first name extracted from the email */}\n                          <SignedInUserEmail></SignedInUserEmail>\n                          <Box m={6} pt={1}></Box>\n                          <Grid\n                            container\n                            direction=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                          >\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              onClick={signOut}\n                              className={classes.button}\n                              startIcon={<MeetingRoomRoundedIcon />}\n                            >\n                              Logout\n                            </Button>\n                          </Grid>\n                          <Box m={1} pt={0}></Box>\n                          <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                          >\n                            <Grid item>\n                              <Button\n                                id=\"basic-button\"\n                                aria-controls=\"basic-menu\"\n                                aria-haspopup=\"true\"\n                                aria-expanded={open ? \"true\" : undefined}\n                                onClick={handleClick}\n                                className={classes.linkButton}\n                              >\n                                Feedback\n                              </Button>\n\n                              <Menu\n                                id=\"basic-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={handleClose}\n                                MenuListProps={{\n                                  \"aria-labelledby\": \"basic-button\",\n                                }}\n                              >\n                                <Link\n                                  href=\"mailto:suggestions@kaglet.app\"\n                                  color=\"#555555\"\n                                  underline=\"none\"\n                                >\n                                  <MenuItem>\n                                    <Box m={0.5} pt={1}>\n                                      <BugReportRounded fontSize=\"small\" />\n                                    </Box>\n                                    Bugs or Suggestions?\n                                  </MenuItem>\n                                </Link>\n                                <Link\n                                  href=\"mailto:help@kaglet.app\"\n                                  color=\"#555555\"\n                                  underline=\"none\"\n                                >\n                                  <MenuItem>\n                                    <Box m={0.5} pt={1}>\n                                      <HelpOutlineRounded fontSize=\"small\" />\n                                    </Box>\n                                    Need help?\n                                  </MenuItem>\n                                </Link>\n\n                                <Link\n                                  href=\"https://discord.link/KzooKaglet\"\n                                  color=\"#555555\"\n                                  underline=\"none\"\n                                >\n                                  <MenuItem>\n                                    <Box m={0.5} pt={1}>\n                                      <Icon icon=\"akar-icons:discord-fill\" />\n                                    </Box>\n                                    Join Our Discord!\n                                  </MenuItem>\n                                </Link>\n                              </Menu>\n                            </Grid>\n                            {/* <Grid item>&ensp;&middot;&ensp;</Grid>\n                            <Grid item>\n                              <Link\n                                href=\"https://usaidbinshafqat.com/\"\n                                color=\"#555555\"\n                              >\n                                About Us\n                              </Link>\n                            </Grid> */}\n                          </Grid>\n                        </ThemeProvider>\n                      </Typography>\n                    </Box>\n                  </Popover>\n                </div>\n              )}\n            </PopupState>\n          </Grid>\n        </Grid>\n      </Toolbar>\n\n      {/* <Toolbar className={classes.secondToolobar}> */}\n      {/* <Grid container spacing={1}> */}\n      {/* <Grid item>\n            <Chip\n              onClick={handleClickCampus}\n              label=\"Campus Events\"\n              clickable\n              color=\"secondary\"\n              variant={flag1 ? \"outlined\" : \"default\"}\n              icon={<SchoolRoundedIcon />}\n              className={classes.chips}\n            />\n          </Grid>\n          <Grid item>\n            <Chip\n              onClick={handleClickStudy}\n              variant={flag2 ? \"outlined\" : \"default\"}\n              label=\"Study Seshes\"\n              clickable\n              color=\"secondary\"\n              icon={<BackpackRoundedIcon />}\n            />\n          </Grid>\n          <Grid item>\n            <Chip\n              onClick={handleClickParty}\n              variant={flag3 ? \"outlined\" : \"default\"}\n              label=\"House Parties\"\n              clickable\n              color=\"secondary\"\n              icon={<LocalBarIcon />}\n            />\n          </Grid> */}\n      {/* <Grid container spacing={3}>\n          <Grid item>\n            <Button variant=\"outlined\" className={classes.buttonChips}>\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <BackpackRoundedIcon />\n                </Grid>\n                <Grid item>Study Seshes</Grid>\n              </Grid>\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button variant=\"outlined\" className={classes.buttonChips}>\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <LocalBarIcon />\n                </Grid>\n                <Grid item>House Parties</Grid>\n              </Grid>\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button variant=\"outlined\" className={classes.buttonChips}>\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <SchoolRoundedIcon />{\" \"}\n                </Grid>\n                <Grid item>Campus Events</Grid>\n              </Grid>\n            </Button>\n          </Grid>\n        </Grid>\n      </Toolbar> */}\n    </AppBar>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/partyImage1.59010835.png\";","export default __webpack_public_path__ + \"static/media/campusImage1.c1c2f219.png\";","export default __webpack_public_path__ + \"static/media/studyImage1.b669a69c.png\";","export default __webpack_public_path__ + \"static/media/studyImage2.54d40e84.png\";","export default __webpack_public_path__ + \"static/media/studyImage3.65de07e1.png\";","export default __webpack_public_path__ + \"static/media/campusImage2.91f3a786.png\";","export default __webpack_public_path__ + \"static/media/campusImage3.b8d12bb7.png\";","export default __webpack_public_path__ + \"static/media/partyImage2.9159f47b.png\";","export default __webpack_public_path__ + \"static/media/partyImage3.9874ef6e.png\";","import { Typography } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport React from \"react\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport {\n  makeStyles,\n  Theme,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // width: '100%',\n    // '& > * + *': {\n    //   marginTop: theme.spacing(2),\n    //   marginBottom: theme.spacing(2),\n    // },\n    flexGrow: 1,\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(1.1),\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(-1),\n    borderRadius: 20,\n    padding: \"0.5rem 0.8rem\",\n    textTransform: \"none\",\n  },\n  rsvpCount: {\n    paddingBottom: 1,\n  },\n}));\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#EE6C4D\",\n//       light: \"#ff9b79\",\n//       dark: \"#b53a22\",\n//     },\n//     secondary: {\n//       main: \"#4C5760\",\n//       light: \"#78848d\",\n//       dark: \"#242e36\",\n//     },\n//   },\n// });\n\nexport interface RsvpDetails {\n  eventID?: string;\n  rsvpList?: any;\n}\n\nconst database = firebase.database();\n\n// export interface State extends SnackbarOrigin {\n//   open: boolean;\n// }\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nlet check = false;\n\nfunction UIDarray(eventID?: string, rsvpList?: any) {\n  console.log(eventID);\n  const auth = firebase.auth();\n  const user = auth.currentUser;\n  console.log(typeof rsvpList);\n\n  if (user) {\n    if (!rsvpList.includes(user.uid)) {\n      rsvpList.push(user.uid);\n      PushFirebase(rsvpList, eventID);\n    } else {\n      //setCheck(true);\n      check = true;\n      // snackbar shows up saying you're already going\n      // to the event, add to calendar here\n    }\n  }\n}\n\nfunction PushFirebase(rsvpList?: any, eventID?: string) {\n  database.ref(\"events/\" + eventID + \"/\").update({\n    rsvpList: rsvpList,\n  });\n}\n\nexport const PlusOneButton: React.FC<RsvpDetails> = (props: RsvpDetails) => {\n  const classes = useStyles();\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(true);\n  };\n\n  // const [state, setState] = React.useState<State>({\n  //   open: false,\n  //   vertical: \"bottom\",\n  //   horizontal: \"center\",\n  // });\n\n  // const { vertical, horizontal } = state;\n\n  // const handleClose = () => {\n  //   setState({ ...state, open: false });\n  //   setOpen(false);\n  //   //setOpen1(false);\n  // };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#EE6C4D\",\n        light: \"#ff9b79\",\n        dark: \"#b53a22\",\n      },\n      secondary: {\n        main: \"#4C5760\",\n        light: \"#78848d\",\n        dark: \"#242e36\",\n      },\n    },\n  });\n\n  function handleDisable() {\n    setSubmitDisabled(true);\n  }\n\n  function validity() {\n    UIDarray(props.eventID, props.rsvpList);\n    console.log(check);\n    if (check === false) {\n      handleClick();\n      handleDisable();\n      props.rsvpList.length = props.rsvpList.length + 1;\n    } else {\n      handleClick1();\n      handleDisable();\n    }\n  }\n\n  const buttons = (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Button\n          disabled={submitDisabled}\n          className={classes.button}\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => {\n            validity();\n          }}\n        >\n          I'll join! 😁\n        </Button>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Typography component=\"div\" align=\"center\">\n          <div>\n            {buttons}\n            <Snackbar\n              autoHideDuration={2000}\n              //anchorOrigin={{ vertical: \"bottom\", horizontal }}\n              open={open}\n              onClose={handleClose}\n              //message=\"Link successfully sent\"\n              //key={vertical + horizontal}\n            >\n              <Alert onClose={handleClose} severity=\"success\">\n                You're on the list! 👍\n              </Alert>\n            </Snackbar>\n\n            <Snackbar\n              autoHideDuration={2000}\n              //anchorOrigin={{ vertical: \"bottom\", horizontal }}\n              open={open1}\n              onClose={handleClose}\n              //message=\"Link successfully sent\"\n              //key={vertical + horizontal}\n            >\n              <Alert onClose={handleClose} severity=\"error\">\n                You've already RSVP'd\n              </Alert>\n            </Snackbar>\n          </div>\n        </Typography>\n      </ThemeProvider>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card, CardMedia } from \"@material-ui/core\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport partyImage1 from \"../logos/partyImage1.png\";\nimport campusImage1 from \"../logos/campusImage1.png\";\nimport studyImage1 from \"../logos/studyImage1.png\";\nimport studyImage2 from \"../logos/studyImage2.png\";\nimport studyImage3 from \"../logos/studyImage3.png\";\nimport campusImage2 from \"../logos/campusImage2.png\";\nimport campusImage3 from \"../logos/campusImage3.png\";\nimport partyImage2 from \"../logos/partyImage2.png\";\nimport partyImage3 from \"../logos/partyImage3.png\";\nimport LocalBarIcon from \"@material-ui/icons/LocalBar\";\nimport SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\nimport BackpackRoundedIcon from \"@material-ui/icons/BackpackRounded\";\nimport { AccountBox } from \"@material-ui/icons\";\nimport { PlusOneButton } from \"./PlusOneButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  cardcomponent: {\n    width: \"82%\",\n  },\n  username: {\n    textAlign: \"left\",\n  },\n  rightAlignText: {\n    textAlign: \"right\",\n    justifyContent: \"center\",\n  },\n  leftAlignText: {\n    textAlign: \"left\",\n    justifyContent: \"center\",\n    paddingLeft: 10,\n  },\n  cardLooks: {\n    borderRadius: 12,\n  },\n  cardTitle: {\n    //fontSize: 20,\n    paddingLeft: 10,\n  },\n  cardSubtitle: {\n    //fontSize: 17,\n    paddingLeft: 5,\n  },\n  media: {\n    height: 170,\n  },\n  titleIcon: {\n    paddingTop: 7,\n  },\n  locationSubtitle: {\n    paddingLeft: 10,\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  rsvpCount: {\n    paddingBottom: 5,\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\nexport interface EventDetails {\n  name: string;\n  type?: string;\n  location?: string;\n  time?: string;\n  email?: string;\n  rsvpList?: any;\n  eventID?: string;\n}\n\nfunction randomGenerator() {\n  const min = 0;\n  const max = 2;\n  const random = min + Math.random() * (max - min);\n\n  return random;\n}\n\nfunction chooseImage(type?: string) {\n  let imageName = \"\";\n  let random = Math.round(randomGenerator());\n  if (type === \"Study Sesh\") {\n    if (random === 0) {\n      imageName = studyImage1;\n    } else if (random === 1) {\n      imageName = studyImage2;\n    } else {\n      imageName = studyImage3;\n    }\n  }\n  if (type === \"House Party\") {\n    if (random === 0) {\n      imageName = partyImage1;\n    } else if (random === 1) {\n      imageName = partyImage2;\n    } else {\n      imageName = partyImage3;\n    }\n  }\n  if (type === \"Campus Event\") {\n    if (random === 0) {\n      imageName = campusImage1;\n    } else if (random === 1) {\n      imageName = campusImage2;\n    } else {\n      imageName = campusImage3;\n    }\n  }\n\n  return imageName;\n}\n\nfunction chooseIcon(type?: string) {\n  let typeIcon: any = \"\";\n  if (type === \"Study Sesh\") {\n    typeIcon = <BackpackRoundedIcon />;\n  }\n  if (type === \"House Party\") {\n    typeIcon = <LocalBarIcon />;\n  }\n  if (type === \"Campus Event\") {\n    typeIcon = <SchoolRoundedIcon />;\n  }\n  return typeIcon;\n}\n\nexport const EventCards: React.FC<EventDetails> = (props: EventDetails) => {\n  const classes = useStyles();\n\n  return (\n    // holding the cards in this div, using useStyles from up top\n    <div className={classes.cardcomponent}>\n      {/* card component for each card */}\n      <Card variant=\"outlined\" className={classes.cardLooks}>\n        {/* \n        card header holds title (orange part) \n        gets data from firebase where it says props.xxx \n        \"xxx\" is defined in the interface before the export const EventCards\n        */}\n        <MuiThemeProvider theme={theme}>\n          <CardMedia\n            className={classes.media}\n            image={chooseImage(props.type)}\n            title=\"Test\"\n          />\n        </MuiThemeProvider>\n        {/* card content (the white part),  */}\n        <CardContent>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            wrap=\"nowrap\"\n          >\n            <Grid item className={`${classes.cardTitle} ${\"heading\"}`}>\n              {props.name}\n            </Grid>\n            <Grid item className={`${classes.titleIcon} ${\"subheading\"}`}>\n              {chooseIcon(props.type)}\n            </Grid>\n          </Grid>\n          {/* <span>&nbsp;</span> */}\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            wrap=\"nowrap\"\n          >\n            <Grid\n              item\n              className={`${classes.locationSubtitle} ${\"subheading\"}`}\n            >\n              {props.location}\n            </Grid>\n            <LocationOnOutlinedIcon />\n          </Grid>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            wrap=\"nowrap\"\n          >\n            <Grid item className={`${classes.cardSubtitle} ${\"subheading\"}`}>\n              {props.time}\n            </Grid>\n          </Grid>\n          &nbsp;\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            wrap=\"nowrap\"\n          >\n            <Grid item className={`${classes.leftAlignText} ${\"subheading\"}`}>\n              {props.email}\n            </Grid>\n            <AccountBox />\n          </Grid>\n        </CardContent>\n        {/* Card actions goes here */}\n        <CardActions>\n          <PlusOneButton\n            eventID={props.eventID}\n            rsvpList={props.rsvpList}\n          ></PlusOneButton>\n          &nbsp; &nbsp;\n          <Grid item className={classes.rsvpCount}>\n            {props.rsvpList.length} attending\n          </Grid>\n          {/* <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton> */}\n        </CardActions>\n        {/* <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n           <Typography paragraph>\n              Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n              heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n              browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n              and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n              pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n              saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n            </Typography> \n            <WithComments></WithComments>\n        </CardContent>\n      </Collapse> */}\n      </Card>\n      &nbsp;\n    </div>\n  );\n};\n","import firebase from \"firebase\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { EventCards } from \"./EventCards\";\nimport moment from \"moment\";\n\nexport const GetEventCards = () => {};\n\nexport const EventCardContainer = () => {\n  const [eventsList, setEventsList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      /** Backup method: REST API */\n      //   const result = await axios(\n      //     \"https://kaglet-91224-default-rtdb.firebaseio.com/events.json\"\n      //   );\n      // console.log(Object.values(result.data));\n      // setEventsList(Object.values(result.data));\n\n      var dateToday = new Date();\n\n      dateToday.setHours(dateToday.getHours() - 2);\n\n      var timeTwoHoursAgoMS = dateToday.getTime();\n\n      console.log(dateToday);\n\n      let allEvents = firebase\n        .database()\n        .ref(\"events\")\n        .startAfter(timeTwoHoursAgoMS)\n        .orderByChild(\"eventTime\");\n\n      allEvents.once(\"value\").then((snapshot) => {\n        // console.log(snapshot.val());\n        // setEventsList(Object.values(snapshot.val()));\n        var fetchedEvents = [] as any;\n        snapshot.forEach(function (child) {\n          fetchedEvents.push(child.val());\n        });\n        setEventsList(fetchedEvents);\n      });\n    };\n    fetchData();\n  }, []);\n\n  console.log(\"eventsList\", eventsList);\n\n  function timeConverter(timeFromFirebase: string) {\n    let dateString = timeFromFirebase;\n    let stringToDate = new Date(dateString);\n    return moment(stringToDate).format(\"MMMM Do, h:mm a\");\n  }\n\n  return (\n    <>\n      {Object.values(eventsList).map((event: any) => (\n        <EventCards\n          name={event.eventName}\n          time={timeConverter(event.eventTime)}\n          location={event.eventLocation}\n          type={event.eventType}\n          email={event.hostEmail}\n          rsvpList={event.rsvpList}\n          eventID={event.id}\n        />\n      ))}\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { PostButton } from \"./PostButton\";\nimport { Typography } from \"@material-ui/core\";\nimport { ToolbarAndChips } from \"./ToolbarAndChips\";\nimport { EventCardContainer } from \"./EventCardContainer\";\nimport firebase from \"firebase\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\nconst darkTheme = createTheme({ palette: { mode: \"dark\" } });\n\n//homescreen function which is checking if the user is logged in or not. If user, then set user id etc etc.\nexport const HomeScreen = () => {\n  const [loggedInUserId, setLoggedInUserId] = useState(\"\");\n  useEffect(() => {\n    const fetchIsLoggedIn = async () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          setLoggedInUserId(user.uid);\n          console.log(user.uid);\n        } else {\n          setLoggedInUserId(\"\");\n        }\n      });\n    };\n    fetchIsLoggedIn();\n  }, [loggedInUserId]);\n  const classes = useStyles();\n  const history = useHistory();\n  //return statement that contains the UI\n  return (\n    <div className={classes.root}>\n      {/* only shows this if the user is logged in (it should contain something in the string if it exists) */}\n      {loggedInUserId === \"\" && (\n        //Grid holding all elements in the homescreen UI\n        <Grid container direction=\"column\" justifyContent=\"center\">\n          <Typography\n            component=\"div\"\n            align=\"center\"\n            ///still figuring out\n            style={{ height: \"100vh\" }}\n          >\n            {/* Toolbar component being imported from the other screen */}\n            <ToolbarAndChips />\n            &nbsp;\n            <Grid\n              container\n              spacing={2}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography variant=\"h5\">\n                Please log in to view awesome K events!\n              </Typography>\n              &nbsp;\n              <Typography variant=\"h6\">\n                If you've logged in, try again in a non-private window.\n              </Typography>\n              &nbsp;\n              <ThemeProvider theme={theme}>\n                <Grid item>\n                  <Button\n                    size=\"large\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className=\"subheading\"\n                    style={{ borderRadius: 20, padding: \"0.25rem 2rem\" }}\n                    onClick={() => history.push(\"/login\")}\n                  >\n                    Login\n                  </Button>\n                </Grid>\n              </ThemeProvider>\n            </Grid>\n          </Typography>\n        </Grid>\n      )}\n\n      {/* otherwise, if it's not an empty string, it should print this. All tags are self-explantory (from Material UI) */}\n      {loggedInUserId !== \"\" && (\n        <Grid container direction=\"column\" justifyContent=\"center\">\n          <Typography\n            component=\"div\"\n            align=\"center\"\n            style={{ height: \"100vh\" }}\n          >\n            <ToolbarAndChips />\n            &nbsp;\n            <Grid\n              container\n              spacing={2}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <EventCardContainer />\n            </Grid>\n            <Grid item>\n              <PostButton />\n            </Grid>\n          </Typography>\n        </Grid>\n      )}\n    </div>\n  );\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Login } from \"./components/Login\";\nimport { SplashScreen } from \"./components/SplashScreen\";\nimport { HomeScreen } from \"./components/HomeScreen\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n  // typography: {\n  //   fontFamily: [\"Nunito\", \"Roboto\"].join(\",\"),\n  // },\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <SplashScreen />{\" \"}\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />{\" \"}\n          </Route>\n          <Route exact path=\"/home\">\n            <HomeScreen />{\" \"}\n          </Route>\n          <Route exact path=\"/splashscreen\">\n            <SplashScreen />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}